name: Official
on:
  workflow_dispatch:
    inputs:
      REPO_BRANCH:
        description: 'Official'
        required: true
        default: 'openwrt-22.03'
        type: choice
        options:
          - 'openwrt-22.03'
      CONFIG_FILE:
        description: '请选择配置文件'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'x86_64'
      INFORMATION_NOTICE:
        description: 'Telegram或pushplus信息通知'
        required: true
        default: 'pushplus'
        type: choice
        options:
          - 'Telegram'
          - 'Telegram'
          - 'pushplus'
      SSH_ACTION:
        description: 'SSH远程配置固件'
        required: false
        default: 'false'
        type: boolean
      UPLOAD_FIRMWARE:
        description: '上传固件到 Github Artifacts'
        required: false
        default: 'true'
        type: boolean
#      UPLOAD_RELEASE:
#        description: '上传固件到 Github Releases'
#        required: false
#        default: 'false'
#        type: boolean
      CACHEWRTBUILD_SWITCH:
        description: '缓存加速编译'
        required: false
        default: 'false'
        type: boolean
      UPDATE_FIRMWARE_ONLINE:
        description: '增加在线更新固件功能'
        required: false
        default: 'true'
        type: boolean
 #     COLLECTED_PACKAGES:
 #       description: '是否加入作者收集的插件包'
 #       required: false
 #       default: 'true'
 #       type: boolean


# 定时触发开启开始编译(把下面两个#去掉开启,时间设置请看定时开启编译说明)
#  schedule:
#   - cron: 35 18 * * *

env:
  GITHUB_LINK: https://github.com/${{github.repository}}
  GIT_ACTOR: ${{github.actor}}
  GIT_REPOSITORY: ${{github.repository}}
  RUN_NUMBER: ${{github.run_number}}
  RUN_WORKFLOW: ${{github.workflow}}
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build:
    name: Official-22.03
    runs-on: ubuntu-20.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    
    env:
      FOLDER_NAME: ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [Official]
        
    steps:
    
    - name: 准备结束
      uses: actions/checkout@v3

    - name: 读取设置
      run: |
        cd ${GITHUB_WORKSPACE}
        cp -f build/common/*.sh build/${{ env.FOLDER_NAME }}/
        chmod -R +x build
        export SOURCE_CODE="$(source "build/${{ matrix.target }}/settings.ini" && echo ${SOURCE_CODE})"
        export INPUTS_INFORMATION_NOTICE="${{ github.event.inputs.INFORMATION_NOTICE }}"
        export INPUTS_REPO_BRANCH="${{ github.event.inputs.REPO_BRANCH }}"
        export INPUTS_CONFIG_FILE="${{ github.event.inputs.CONFIG_FILE }}"
        export INPUTS_UPLOAD_FIRMWARE="${{ github.event.inputs.UPLOAD_FIRMWARE }}"
        export INPUTS_UPLOAD_RELEASE="${{ github.event.inputs.UPLOAD_RELEASE }}"
        export INPUTS_CACHEWRTBUILD_SWITCH="${{ github.event.inputs.CACHEWRTBUILD_SWITCH }}"
        export INPUTS_UPDATE_FIRMWARE_ONLINE="${{ github.event.inputs.UPDATE_FIRMWARE_ONLINE }}"
        export INPUTS_PACKAGING_FIRMWARE="${{ github.event.inputs.PACKAGING_FIRMWARE }}"
        export INPUTS_COLLECTED_PACKAGES="${{ github.event.inputs.COLLECTED_PACKAGES }}"
        export INPUTS_CPU_SELECTION="${{ github.event.inputs.CPU_SELECTION }}"
        source build/${{ env.FOLDER_NAME }}/common.sh && settings_variable
        source build/${{ env.FOLDER_NAME }}/common.sh && Diy_menu1
        
    - name: 编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y gawk git gettext libssl-dev xsltproc zip git-core wget curl grep python2.7 python3 python3-pip python3-ply
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /${{ env.DIY_WORK }}
        sudo chown $USER:$GROUPS /${{ env.DIY_WORK }}
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
    
    - name: 下载源码
      working-directory: /${{ env.DIY_WORK }}
      run: |
        git clone -b "${REPO_BRANCH}" --single-branch "${REPO_URL}" openwrt
        ln -sf /${{ env.DIY_WORK }}/openwrt ${GITHUB_WORKSPACE}/openwrt
        source ${GITHUB_WORKSPACE}/build/${{ env.FOLDER_NAME }}/common.sh && Diy_checkout
 
    - name: 添加设置
      if: env.REPO_TOKEN
      continue-on-error: true
      run: |
        cd openwrt
        source ${BUILD_PATH}/common.sh && Diy_menu3
 
    - name: 添加插件
      if: env.REPO_TOKEN
      continue-on-error: true
      run: |
        cd openwrt
        source $BUILD_PATH/$DIY_PART_SH
        source build/${{ env.FOLDER_NAME }}/common.sh && Diy_Publicarea
        
    - name: 加载文件
      if: env.REPO_TOKEN
      continue-on-error: true
      run: |
        cd openwrt
        source ${BUILD_PATH}/common.sh && Diy_menu4
    
    - name: SSH连接
      if: github.event.inputs.SSH_ACTION == 'true'
      uses: makebl/debugger-action@main
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 生成配置
      if: env.REPO_TOKEN
      id: compile
      run: |
        cd openwrt
        source ${BUILD_PATH}/common.sh && Diy_menu5
        
    - name: 上传配置
      if: steps.compile.outcome == 'success'
      continue-on-error: true
      uses: actions/upload-artifact@main
      with:
        name: .config_${{ env.SOURCE }}_${{ env.LUCI_EDITION }}_${{ env.TARGET_PROFILE }}_${{ env.Firmware_Date }}
        path: openwrt/build_logo/config.txt
        
    - name: 编译信息
      continue-on-error: true
      if: env.COMPILATION_INFORMATION == 'true'
      run: |
        cd openwrt
        source ${BUILD_PATH}/common.sh && Diy_xinxi
    
    - name: 清理空间
      continue-on-error: true
      if: env.REPO_TOKEN
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.REPO_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: ${{ env.RETAIN_DAYS }}
        keep_minimum_runs: 1
    
    - name: 删除发布
      continue-on-error: true
      if: env.REPO_TOKEN
      uses: danshui-git/delete-older-releases@main
      with:
        repo: ${{ github.repository }}
        keep_latest: ${{ env.KEEP_LATEST }}
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        
    - name: 触发编译
      id: gitpush
      if: steps.compile.outcome == 'success' && env.REPO_TOKEN
      run: |
        cd ${GITHUB_WORKSPACE}
        source ${BUILD_PATH}/common.sh && build_openwrt
        
    - name: 编译通知
      continue-on-error: true
      if: env.PUSH_PLUS_TOKEN && env.INFORMATION_NOTICE == 'PUSH' || env.TELEGRAM_BOT_TOKEN && env.INFORMATION_NOTICE == 'TG'
      run: |
        if [[ "${{ env.INFORMATION_NOTICE }}" == "TG" ]]; then
          if [[ "${{steps.gitpush.outcome}}" == 'success' ]] && [[ "${{steps.compile.outcome}}" == 'success' ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 Hey💕：您的编译脚本成功触发【${{ env.FOLDER_NAME }}】文件夹编译【${{env.TARGET_PROFILE}}】固件中,请耐心等待...... 😋(${{env.Tongzhi_Date}})" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          else
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=💥 Oops❌ ：上游扩展错误或者脚本错误,触发启动【${{ env.FOLDER_NAME }}】失败,请点击触发脚本步骤查看详情!(${{env.Tongzhi_Date}})" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
            exit 1
          fi
        fi
        if [[ "${{ env.INFORMATION_NOTICE }}" == "PUSH" ]]; then
          if [[ "${{steps.gitpush.outcome}}" == 'success' ]] && [[ "${{steps.compile.outcome}}" == 'success' ]]; then
            curl -k --data token="${{ secrets.PUSH_PLUS_TOKEN }}" --data title="开始编译【${{ env.FOLDER_NAME }}】" --data "content=🎉 Hey💕：您的编译脚本成功触发【${{ env.FOLDER_NAME }}】文件夹编译【${{env.TARGET_PROFILE}}】固件中,请耐心等待...... 😋(${{env.Tongzhi_Date}})" "http://www.pushplus.plus/send"
          else
            curl -k --data token="${{ secrets.PUSH_PLUS_TOKEN }}" --data title="触发启动失败" --data "content=💥 Oops❌ ：上游扩展错误或者脚本错误,触发启动【${{ env.FOLDER_NAME }}】失败,请点击触发脚本步骤查看详情!(${{env.Tongzhi_Date}})" "http://www.pushplus.plus/send"
            exit 1
          fi
        fi
